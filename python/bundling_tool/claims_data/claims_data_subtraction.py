__author__ = 'ishekhtman'
########################################################################################################################
#
# PROGRAM: claims_data_subtraction.py
# AUTHOR:  Igor Shekhtman ishekhtman@apixio.com
# DATE:    Jan. 12, 2015 - Initial Version
#
# REVISIONS:
# AUTHOR: Igor Shekhtman ishekhtman@apixio.com
# DATE: Jan. 12, 2015
# SPECIFICS: None
#
# PURPOSE:
#          This program should be executed via Python 2.6 and is meant for testing Bundler Claims Data Subtraction mechanism:
#          * 1st Pass Project creation
#          * 2nd Pass Project creation
#          * Number of Opportunities generated by the Bundler verification
#          * 2nd Pass Project creation
#          * Number of Opportunities generation by the Bundler verification
#
# SETUP:
#          * Assumes a HCC environment is available
#          * Assumes a Python 2.6 environment is available
#          * From QA server (qa.apixio.com) /mnt/automation/python/stress_test folder enter "python2.7 claims_data_subtraction.py"
#
# USAGE:   * Test Results will be printed on Console screen as well as mailed via QA report
#
########################################################################################################################
import os,sys,time
import collections
import authentication
import elasticsearch
import requests
import json

reload(authentication)

#=======================================================================================================================
def getEnvHosts(env):
  if env.lower()[0] == 's':
    tokenhost = 'https://tokenizer-stg.apixio.com:7075/tokens'
    hcchost = 'https://hcceng.apixio.com/'
    ssohost = 'https://accounts-stg.apixio.com'
    uahost = 'https://useraccount-stg.apixio.com'
    uaport = ':7076'
    caller = 'hcc_stg'
    #accounts: https://useraccount-stg.apixio.com:7076
    #externalToken: https://useraccount-stg.apixio.com:7076/auths
    #token: https://tokenizer-stg.apixio.com:7075/tokens
    #dataOrch: https://dataorchestrator-stg.apixio.com:7085
    #metrics: https://cmp-stg2.apixio.com:7087/cmp/v1/metric/hcc/
    #sso: https://accounts-stg.apixio.com/?caller=cmp-eng
  elif env.lower()[0] == 'd':
    tokenhost = 'https://tokenizer-dev.apixio.com:7075/tokens'
    hcchost = 'https://hccdev.apixio.com/'
    ssohost = 'https://accounts-dev.apixio.com'
    uahost = 'https://useraccount-dev.apixio.com'
    uaport = ':7076'
    caller = 'hcc_dev'
  elif env.lower()[0] == 'e':
    tokenhost = 'https://tokenizer-eng.apixio.com:7075/tokens'
    hcchost = 'https://hcceng.apixio.com/'
    ssohost = 'https://accounts-eng.apixio.com'
    uahost = 'https://useraccount-eng.apixio.com'
    uaport = ':7076'
    caller = 'hcc_eng'
  hlist= {'tokenhost':tokenhost, 'hcchost':hcchost, 'ssohost':ssohost, 'uahost':uahost, 'uaport':uaport, 'caller':caller}
  return (hlist)
#=======================================================================================================================
def createProject(dsID, projName, headers, hlist):
  print "* DataSet ID".ljust(25)+" = " + dsID
  print "* Project Name".ljust(25)+" = " +projName

  data={}
  url = hlist['uahost']+hlist['uaport']+'/projects'

  print data
  print headers
  print url


  response = requests.get(url, data=json.dumps(data), headers=headers)
  print response.status_code
  projects = response.json()
  for project in projects:
    if project['pdsExternalID'] == dsID:
      print project['name']









  projectID = ""




  return(projectID)
#=======================================================================================================================
#==================================================== MAIN PROGRAM =====================================================
#=======================================================================================================================
def Main():
  global options
  reload(authentication)
  os.system('clear')

  authentication.defineGlobals()
  dsID = '506'
  projName = 'HealthNet16'
  hlist = getEnvHosts('s')
  headers = authentication.authenticateSetHeaders('ishekhtman@apixio.com', 'apixio.321', hlist)
  projID = createProject(dsID, projName, headers, hlist)



  BODY = {"query": {"bool": {"must": [{"terms": {"project": ["CP_926086b3-350c-4cbb-911a-898820823b4d"]}}]}},"from": 0,"size": 1}
  es = elasticsearch.Elasticsearch('http://elasticsearch-stg.apixio.com:9200')
  es.index(index='org-506', doc_type='opportunity', id='_search', body=BODY)
  resp = es.get(index='org-506', doc_type='opportunity', id='_search')['hits']
  print "* Total # of Opps (ES)".ljust(25)+" = "+str(resp['total'])






if __name__ == "__main__":
  Main()
#=======================================================================================================================